version: '3.8'

services:
  backend:
    build:
      context: ./backend
      target: development


      args:
        NODE_ENV: development
    image: examen-2024-backend:dev
    container_name: dev-backend
    working_dir: /app
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      BACKEND_HOST: dev-backend
      BACKEND_PORT: 3000
      DATABASE_HOST: database
      FRONTEND_HOST: localhost
      FRONTEND_PORT: 8080	
      db_host: database
      db_user: root
      db_pass: root
      db_name: eurosong
      db_port: 3306
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"] # Add a healthcheck route to backend
      interval: 10s
      timeout: 5s
      retries: 5

    command: sh -c "npm install && npm run dev"

  frontend:
    build:
      context: ./frontend
      target: development  
      args:
        NODE_ENV: development
    image: examen-2024-frontend:dev
    container_name: dev-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: development
      BACKEND_HOST: dev-backend
      BACKEND_PORT: 3000

      VUE_APP_BACKEND_API_URL: http://localhost:3000
    depends_on:
      - backend
    networks:
      - app_network
    command: sh -c "npm install && npm run serve"

  database:
    image: mysql:8.0
    container_name: dev-database
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: eurosong
    ports:
      - "3306:3306"
    networks:
      - app_network
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/schema.sql

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  db_data:
    driver: local
