services:
  database:
    image: mysql:8.0
    container_name: prod-database
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: eurosong
    ports:
      - "3306:3306"
    networks:
      - app_network
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro  # Added :ro for read-only

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      target: production
    image: ghcr.io/moad-touhafi/examen-2024-backend:latest
    container_name: prod-backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      BACKEND_HOST: backend
      BACKEND_PORT: 3000
      DATABASE_HOST: database
      FRONTEND_HOST: localhost
      FRONTEND_PORT: 8080

      db_host: database
      db_user: root
      db_pass: root
      db_name: eurosong
      db_port: 3306
      cors_origin: http://localhost:8080
      HOST: 0.0.0.0
      PORT: 3000
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app_network
    env_file:
      - .env.production

  frontend:
    build:
      context: ./frontend
      target: production
    image: ghcr.io/moad-touhafi/examen-2024-frontend:latest
    container_name: prod-frontend
    ports:
      - "8080:80"
    environment:
      NODE_ENV: production
      BACKEND_HOST: backend
      BACKEND_PORT: 3000
      VUE_APP_BACKEND_API_URL: http://backend:3000
    depends_on:
      - backend
    networks:
      - app_network
    env_file:
      - .env.production

  mysql-client:
    image: mysql:8.0
    command: ["mysql", "-h", "database", "-u", "root", "-proot", "eurosong"]
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: eurosong
      BACKEND_HOST: backend
      BACKEND_PORT: 3000
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  db_data:
    driver: local
